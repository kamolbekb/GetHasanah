// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using N_Tier.DataAccess.Persistence;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace N_Tier.DataAccess.Persistence.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20241221073437_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("N_Tier.Core.Entities.Issue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateLearned")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("From")
                        .HasColumnType("integer");

                    b.Property<int>("LearnTypeId")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("LearningTime")
                        .HasColumnType("interval");

                    b.Property<long>("RepetitionCount")
                        .HasColumnType("bigint");

                    b.Property<int?>("SurahId")
                        .HasColumnType("integer");

                    b.Property<int>("To")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LearnTypeId");

                    b.HasIndex("SurahId");

                    b.HasIndex("UserId");

                    b.ToTable("Issues");
                });

            modelBuilder.Entity("N_Tier.Core.Entities.LearnType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("LearnTypes");
                });

            modelBuilder.Entity("N_Tier.Core.Entities.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsSend")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("NotificationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<TimeSpan>("NotificationTime")
                        .HasColumnType("interval");

                    b.Property<int>("RepetitionPlanId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RepetitionPlanId");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("N_Tier.Core.Entities.RepetitionPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean");

                    b.Property<int>("IssueId")
                        .HasColumnType("integer");

                    b.Property<int>("IssuesId")
                        .HasColumnType("integer");

                    b.Property<bool>("RemindMe")
                        .HasColumnType("boolean");

                    b.Property<long>("RepetitionCount")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("RepetitionDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("RepetitionDay")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("RepetitionTime")
                        .HasColumnType("interval");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IssueId");

                    b.HasIndex("UserId");

                    b.ToTable("RepetitionPlans");
                });

            modelBuilder.Entity("N_Tier.Core.Entities.Surah", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AyahSize")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Surahs");
                });

            modelBuilder.Entity("N_Tier.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("TelegramId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("N_Tier.Core.Entities.Issue", b =>
                {
                    b.HasOne("N_Tier.Core.Entities.LearnType", "LearnType")
                        .WithMany("Issues")
                        .HasForeignKey("LearnTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("N_Tier.Core.Entities.Surah", "Surah")
                        .WithMany("Issues")
                        .HasForeignKey("SurahId");

                    b.HasOne("N_Tier.Core.Entities.User", "User")
                        .WithMany("Issues")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LearnType");

                    b.Navigation("Surah");

                    b.Navigation("User");
                });

            modelBuilder.Entity("N_Tier.Core.Entities.Notification", b =>
                {
                    b.HasOne("N_Tier.Core.Entities.RepetitionPlan", "RepetitionPlan")
                        .WithMany("Notifications")
                        .HasForeignKey("RepetitionPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("N_Tier.Core.Entities.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RepetitionPlan");

                    b.Navigation("User");
                });

            modelBuilder.Entity("N_Tier.Core.Entities.RepetitionPlan", b =>
                {
                    b.HasOne("N_Tier.Core.Entities.Issue", "Issue")
                        .WithMany("RepetitionPlans")
                        .HasForeignKey("IssueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("N_Tier.Core.Entities.User", "User")
                        .WithMany("RepetitionPlans")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Issue");

                    b.Navigation("User");
                });

            modelBuilder.Entity("N_Tier.Core.Entities.Issue", b =>
                {
                    b.Navigation("RepetitionPlans");
                });

            modelBuilder.Entity("N_Tier.Core.Entities.LearnType", b =>
                {
                    b.Navigation("Issues");
                });

            modelBuilder.Entity("N_Tier.Core.Entities.RepetitionPlan", b =>
                {
                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("N_Tier.Core.Entities.Surah", b =>
                {
                    b.Navigation("Issues");
                });

            modelBuilder.Entity("N_Tier.Core.Entities.User", b =>
                {
                    b.Navigation("Issues");

                    b.Navigation("Notifications");

                    b.Navigation("RepetitionPlans");
                });
#pragma warning restore 612, 618
        }
    }
}
